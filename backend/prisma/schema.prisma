// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employee {
  employeeId   String         @id @default(cuid())
  name         String
  email        String         @unique
  password     String
  role         String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Project      Project[]
  WeeklyReport WeeklyReport[]
  WeeklyActualReport WeeklyActualReport[]
  Leaves       Leaves[]
  EmployeeWeek EmployeeWeek[]
  ActualLeaves ActualLeaves[]
}

model Project {
  projectId    String         @id @default(cuid())
  category     String
  name         String
  description  String
  employeeId   String
  completed    Int            @default(0)
  Employee     Employee       @relation(fields: [employeeId], references: [employeeId])
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  WeeklyReport WeeklyReport[]
  WeeklyActualReport WeeklyActualReport[]
}

model Week {
  weekId         String         @id @default(cuid())
  availableHours Int
  startDate      DateTime
  endDate        DateTime
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  WeeklyReport   WeeklyReport[]
  WeeklyActualReport WeeklyActualReport[]
  Leaves         Leaves[]
  EmployeeWeek   EmployeeWeek[]
  ActualLeaves   ActualLeaves[]
}


model WeeklyReport {
  weekReportId String   @id @default(cuid())
  projectId    String
  employeeId   String
  weekId       String
  hours        Int
  Submitted Int @default(0)
  Project      Project  @relation(fields: [projectId], references: [projectId])
  Employee     Employee @relation(fields: [employeeId], references: [employeeId])
  Week         Week     @relation(fields: [weekId], references: [weekId])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model WeeklyActualReport{
  weekReportId String   @id @default(cuid())
  projectId    String
  employeeId   String
  weekId       String
  hours        Int
  Submitted    Int    @default(0)
  Project      Project  @relation(fields: [projectId], references: [projectId])
  Employee     Employee @relation(fields: [employeeId], references: [employeeId])
  Week         Week     @relation(fields: [weekId], references: [weekId])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Leaves{
  leaveId     String   @id @default(cuid())
  employeeId  String
  weekId      String
  hours       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Employee    Employee @relation(fields: [employeeId], references: [employeeId])
  Week        Week     @relation(fields: [weekId], references: [weekId])
}

model ActualLeaves{
  leaveId     String   @id @default(cuid())
  employeeId  String
  weekId      String
  hours       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Employee    Employee @relation(fields: [employeeId], references: [employeeId])
  Week        Week     @relation(fields: [weekId], references: [weekId])
}

model EmployeeWeek{
  employeeWeekId String @id @default(cuid())
  employeeId     String
  weekId         String
  availableHours Float
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  Employee       Employee @relation(fields: [employeeId], references: [employeeId])
  Week           Week     @relation(fields: [weekId], references: [weekId])
}
